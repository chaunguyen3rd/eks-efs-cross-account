apiVersion: v1
kind: ServiceAccount
metadata:
  name: efs-reader-sa
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: ${EFS_CROSS_ACCOUNT_ROLE_ARN}  # Replace with actual cross-account role ARN
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-cross-account-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-cross-account-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: ${COREBANK_EFS_ID}  # Replace with actual EFS ID from corebank
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-reader-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-cross-account-sc
  resources:
    requests:
      storage: 10Gi
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-cross-account-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: ${COREBANK_EFS_ID}  # Replace with actual EFS ID from corebank
  directoryPerms: "0755"
  gidRangeStart: "1000"
  gidRangeEnd: "2000"
  basePath: "/cross_account_access"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: efs-reader-app
  namespace: default
  labels:
    app: efs-reader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: efs-reader
  template:
    metadata:
      labels:
        app: efs-reader
    spec:
      serviceAccountName: efs-reader-sa
      containers:
      - name: reader
        image: alpine:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "EFS Reader Application Started"
            echo "Attempting to connect to corebank EFS..."
            
            while true; do
              timestamp=$(date '+%Y-%m-%d %H:%M:%S')
              echo "[$timestamp] Reading from corebank EFS - $(hostname)"
              
              # Try to read files from EFS
              if [ -d "/mnt/efs" ]; then
                echo "EFS mount point exists"
                echo "Contents of EFS root:"
                ls -la /mnt/efs/ || echo "Failed to list EFS root"
                
                if [ -d "/mnt/efs/logs" ]; then
                  echo "Reading writer logs:"
                  tail -5 /mnt/efs/logs/writer.log || echo "No writer logs found"
                else
                  echo "No logs directory found"
                fi
                
                echo "All files in EFS:"
                find /mnt/efs -type f -name "*.txt" | head -10 || echo "No text files found"
                
                # Write a response file
                echo "[$timestamp] Read from satellite account - $(hostname)" >> /mnt/efs/logs/reader.log 2>/dev/null || echo "Cannot write to EFS"
              else
                echo "EFS mount point not available"
              fi
              
              sleep 30
            done
        volumeMounts:
        - name: efs-storage
          mountPath: /mnt/efs
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: efs-storage
        persistentVolumeClaim:
          claimName: efs-reader-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: efs-reader-service
  namespace: default
spec:
  selector:
    app: efs-reader
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
