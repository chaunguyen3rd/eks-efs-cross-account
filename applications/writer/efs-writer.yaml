apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
  namespace: default
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: ${EFS_ID}  # Replace with actual EFS ID
  directoryPerms: "0755"
  gidRangeStart: "1000"
  gidRangeEnd: "2000"
  basePath: "/dynamic_provisioning"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-writer-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: efs-writer-sa
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: ${EFS_ROLE_ARN}  # Replace with actual role ARN
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: efs-writer-app
  namespace: default
  labels:
    app: efs-writer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: efs-writer
  template:
    metadata:
      labels:
        app: efs-writer
    spec:
      serviceAccountName: efs-writer-sa
      containers:
      - name: writer
        image: alpine:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "EFS Writer Application Started"
            mkdir -p /mnt/efs/logs
            while true; do
              timestamp=$(date '+%Y-%m-%d %H:%M:%S')
              echo "[$timestamp] Writing from corebank account - $(hostname)" >> /mnt/efs/logs/writer.log
              echo "[$timestamp] Data written successfully" >> /mnt/efs/logs/writer.log
              
              # Create some test files
              echo "Test data from corebank at $timestamp" > "/mnt/efs/test-file-$(date +%s).txt"
              
              # Show current files
              echo "Current files in EFS:"
              ls -la /mnt/efs/
              ls -la /mnt/efs/logs/
              
              sleep 30
            done
        volumeMounts:
        - name: efs-storage
          mountPath: /mnt/efs
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: efs-storage
        persistentVolumeClaim:
          claimName: efs-writer-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: efs-writer-service
  namespace: default
spec:
  selector:
    app: efs-writer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
