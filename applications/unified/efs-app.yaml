---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
mountOptions:
  - tls
parameters:
  provisioningMode: efs-ap
  fileSystemId: "${EFS_ID}"
  directoryPerms: "0755"
  csi.storage.k8s.io/provisioner-secret-name: x-account
  csi.storage.k8s.io/provisioner-secret-namespace: kube-system
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-claim
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: efs-s3-downloader
  labels:
    app: efs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: efs-app
  template:
    metadata:
      labels:
        app: efs-app
    spec:
      containers:
        - name: s3-downloader
          image: amazon/aws-cli:latest
          command: ["/bin/sh"]
          args:
            - -c
            - |
              echo "Starting S3 file download to EFS mount..."

              # Create download directory
              mkdir -p /data/downloads

              echo "Downloading files..."
              aws s3 cp "$S3_BUCKET_URL/$FILES_TO_DOWNLOAD" "/data/downloads/" --recursive

              echo "Download process completed!"
              echo "Files in EFS mount:"
              ls -la /data/downloads/
              du -hs /data/downloads/$FILES_TO_DOWNLOAD

              # Keep container running
              sleep infinity
          volumeMounts:
            - name: persistent-storage
              mountPath: /data
          env:
            - name: S3_BUCKET_URL
              value: "s3://core-efs-eks-cross-account-public-bucket"
            - name: FILES_TO_DOWNLOAD
              value: "21m.011-fall-2024" # Specify files here, space-separated
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: efs-claim
